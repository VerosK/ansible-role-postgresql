---
- name: 'Check ansible version >= 2.0'
  assert:
    that:
    - 'ansible_version.major is number'
    - 'ansible_version.major >= 2'

- name: "Include variables"
  include_vars: '{{ item }}'
  with_first_found:
    - files:
      - '{{ ansible_distribution }}-{{ansible_distribution_version}}.yml'
      - '{{ ansible_distribution }}-{{ansible_distribution_major_version}}.yml'
      - '{{ ansible_distribution }}.yml'
      - '{{ ansible_os_family }}.yml'
      path:
      - '../vars'

- name: Set postgres variables
  set_fact:
    postgresql_hba_file: '{{ postgresql_hba_file|default(__postgresql_hba_file) }}'
    postgresql_config_file: '{{ postgresql_config_file|default(__postgresql_config_file) }}'
    postgresql_ident_file: '{{ postgresql_ident_file|default(__postgresql_ident_file) }}'
    postgresql_service: '{{ postgresql_service|default(__postgresql_service) }}'
    postgresql_datadir: '{{ postgresql_datadir|default(__postgresql_datadir) }}'
    postgresql_bindir: '{{ postgresql_bindir|default(__postgresql_bindir) }}'


- name: Install on Debian
  include: install-debian.yml
  when: ansible_os_family == 'Debian'

- name: Install on RedHat
  include: install-redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Upload config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "postgres"
    group: "postgres"
    mode: "0644"
    backup: yes
  with_items:
    - src: "pg_hba.conf.j2"
      dest: "{{ postgresql_hba_file }}"
    - src: "postgresql.conf.j2"
      dest: "{{ postgresql_config_file }}"
    - src: "pg_ident.conf.j2"
      dest: "{{ postgresql_ident_file }}"
  notify: restart postgresql

- name: enable service
  service:
    name: "{{ postgresql_service }}"
    enabled: "{{ postgresql_service_enable }}"
    state: "{{ postgresql_service_state }}"
  notify: restart postgresql
  ignore_errors: '{{ postgresql_ignore_start_errors }}'
